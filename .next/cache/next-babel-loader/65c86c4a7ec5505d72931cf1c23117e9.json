{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\n\nvar Calendar = /*#__PURE__*/function (_React$Component) {\n  _inherits(Calendar, _React$Component);\n\n  var _super = _createSuper(Calendar);\n\n  function Calendar(_props) {\n    var _this2 = this;\n\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _super.call(this, _props);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      dateContext: moment(),\n      today: moment(),\n      showMonthPopup: false,\n      showYearPopup: false,\n      selectedDay: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"weekdays\", moment.weekdays());\n\n    _defineProperty(_assertThisInitialized(_this), \"weekdaysShort\", moment.weekdaysShort());\n\n    _defineProperty(_assertThisInitialized(_this), \"months\", moment.months());\n\n    _defineProperty(_assertThisInitialized(_this), \"year\", function () {\n      return _this.state.dateContext.format(\"Y\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"month\", function () {\n      return _this.state.dateContext.format(\"MMMM\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"daysInMonth\", function () {\n      return _this.state.dateContext.daysInMonth();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"currentDate\", function () {\n      return _this.state.dateContext.get(\"date\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"currentDay\", function () {\n      return _this.state.dateContext.format(\"D\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"firstDayOfMonth\", function () {\n      var dateContext = _this.state.dateContext;\n      var firstDay = moment(dateContext).startOf('month').format('d'); // Day of week 0...1..5...6\n\n      return firstDay;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setMonth\", function (month) {\n      var monthNo = _this.months.indexOf(month);\n\n      var dateContext = Object.assign({}, _this.state.dateContext);\n      dateContext = moment(dateContext).set(\"month\", monthNo);\n\n      _this.setState({\n        dateContext: dateContext\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"nextMonth\", function () {\n      var dateContext = Object.assign({}, _this.state.dateContext);\n      dateContext = moment(dateContext).add(1, \"month\");\n\n      _this.setState({\n        dateContext: dateContext\n      });\n\n      _this.props.onNextMonth && _this.props.onNextMonth();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"prevMonth\", function () {\n      var dateContext = Object.assign({}, _this.state.dateContext);\n      dateContext = moment(dateContext).subtract(1, \"month\");\n\n      _this.setState({\n        dateContext: dateContext\n      });\n\n      _this.props.onPrevMonth && _this.props.onPrevMonth();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSelectChange\", function (e, data) {\n      _this.setMonth(data);\n\n      _this.props.onMonthChange && _this.props.onMonthChange();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"SelectList\", function (props) {\n      var popup = props.data.map(function (data) {\n        return /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsx(\"a\", {\n            href: \"#\",\n            onClick: function onClick(e) {\n              _this.onSelectChange(e, data);\n            },\n            children: data\n          })\n        }, data);\n      });\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: \"month-popup\",\n        children: popup\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeMonth\", function (e, month) {\n      _this.setState({\n        showMonthPopup: !_this.state.showMonthPopup\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"MonthNav\", function () {\n      return /*#__PURE__*/_jsxs(\"span\", {\n        className: \"label-month\",\n        onClick: function onClick(e) {\n          _this.onChangeMonth(e, _this.month());\n        },\n        children: [_this.month(), _this.state.showMonthPopup && /*#__PURE__*/_jsx(_this2.SelectList, {\n          data: _this.months\n        })]\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showYearEditor\", function () {\n      _this.setState({\n        showYearNav: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setYear\", function (year) {\n      var dateContext = Object.assign({}, _this.state.dateContext);\n      dateContext = moment(dateContext).set(\"year\", year);\n\n      _this.setState({\n        dateContext: dateContext\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onYearChange\", function (e) {\n      _this.setYear(e.target.value);\n\n      _this.props.onYearChange && _this.props.onYearChange(e, e.target.value);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyUpYear\", function (e) {\n      if (e.which === 13 || e.which === 27) {\n        _this.setYear(e.target.value);\n\n        _this.setState({\n          showYearNav: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"YearNav\", function () {\n      return _this.state.showYearNav ? /*#__PURE__*/_jsx(\"input\", {\n        defaultValue: _this.year(),\n        className: \"editor-year\",\n        ref: function ref(yearInput) {\n          _this.yearInput = yearInput;\n        },\n        onKeyUp: function onKeyUp(e) {\n          return _this.onKeyUpYear(e);\n        },\n        onChange: function onChange(e) {\n          return _this.onYearChange(e);\n        },\n        type: \"number\",\n        placeholder: \"year\"\n      }) : /*#__PURE__*/_jsx(\"span\", {\n        className: \"label-year\",\n        onDoubleClick: function onDoubleClick(e) {\n          _this.showYearEditor();\n        },\n        children: _this.year()\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDayClick\", function (e, day) {\n      _this.setState({\n        selectedDay: day\n      }, function () {});\n\n      _this.props.onDayClick && _this.props.onDayClick(e, day);\n    });\n\n    _this.width = _props.width || \"100%\";\n    _this.style = _props.style || {};\n    _this.style.width = _this.width; // add this\n\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // Map the weekdays i.e Sun, Mon, Tue etc as <td>\n      var weekdays = this.weekdaysShort.map(function (day) {\n        return /*#__PURE__*/_jsx(\"td\", {\n          className: \"week-day\",\n          children: day\n        }, day);\n      });\n      var blanks = [];\n\n      for (var i = 0; i < this.firstDayOfMonth(); i++) {\n        blanks.push( /*#__PURE__*/_jsx(\"td\", {\n          className: \"emptySlot\",\n          children: \"\"\n        }, i * 80));\n      }\n\n      var daysInMonth = [];\n\n      var _loop = function _loop(d) {\n        var className = d == _this3.currentDay() ? \"day current-day\" : \"day\";\n        var selectedClass = d == _this3.state.selectedDay ? \" selected-day \" : \"\";\n        daysInMonth.push( /*#__PURE__*/_jsx(\"td\", {\n          className: className + selectedClass,\n          children: /*#__PURE__*/_jsx(\"span\", {\n            onClick: function onClick(e) {\n              _this3.onDayClick(e, d);\n            },\n            children: d\n          })\n        }, d));\n      };\n\n      for (var d = 1; d <= this.daysInMonth(); d++) {\n        _loop(d);\n      }\n\n      var totalSlots = [].concat(blanks, daysInMonth);\n      var rows = [];\n      var cells = [];\n      totalSlots.forEach(function (row, i) {\n        if (i % 7 !== 0) {\n          cells.push(row);\n        } else {\n          var insertRow = cells.slice();\n          rows.push(insertRow);\n          cells = [];\n          cells.push(row);\n        }\n\n        if (i === totalSlots.length - 1) {\n          var _insertRow = cells.slice();\n\n          rows.push(_insertRow);\n        }\n      });\n      var trElems = rows.map(function (d, i) {\n        return /*#__PURE__*/_jsx(\"tr\", {\n          children: d\n        }, i * 100);\n      });\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: \"eventinfo\",\n        children: [/*#__PURE__*/_jsx(\"h3\", {\n          children: \"School Calendar \"\n        }), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsx(\"div\", {\n          className: \"calendar-container\",\n          style: this.style,\n          children: /*#__PURE__*/_jsxs(\"table\", {\n            className: \"calendar\",\n            children: [/*#__PURE__*/_jsx(\"thead\", {\n              children: /*#__PURE__*/_jsxs(\"tr\", {\n                className: \"calendar-header\",\n                children: [/*#__PURE__*/_jsxs(\"td\", {\n                  colSpan: \"5\",\n                  children: [/*#__PURE__*/_jsx(this.MonthNav, {}), \" \", /*#__PURE__*/_jsx(this.YearNav, {})]\n                }), /*#__PURE__*/_jsxs(\"td\", {\n                  colSpan: \"2\",\n                  className: \"nav-month\",\n                  children: [/*#__PURE__*/_jsx(FontAwesomeIcon, {\n                    icon: faArrowLeft,\n                    onClick: function onClick(e) {\n                      _this3.prevMonth();\n                    },\n                    className: \"prev\"\n                  }), /*#__PURE__*/_jsx(FontAwesomeIcon, {\n                    icon: faArrowRight,\n                    onClick: function onClick(e) {\n                      _this3.nextMonth();\n                    },\n                    className: \"prev\"\n                  })]\n                })]\n              })\n            }), /*#__PURE__*/_jsxs(\"tbody\", {\n              children: [/*#__PURE__*/_jsx(\"tr\", {\n                children: weekdays\n              }), trElems]\n            })]\n          })\n        })]\n      });\n    }\n  }]);\n\n  return Calendar;\n}(React.Component);\n\nexport { Calendar as default };","map":null,"metadata":{},"sourceType":"module"}