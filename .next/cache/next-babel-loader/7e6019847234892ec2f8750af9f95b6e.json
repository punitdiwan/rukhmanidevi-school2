{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nexport default class Calendar extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    _defineProperty(this, \"state\", {\n      dateContext: moment(),\n      today: moment(),\n      showMonthPopup: false,\n      showYearPopup: false,\n      selectedDay: null\n    });\n\n    _defineProperty(this, \"weekdays\", moment.weekdays());\n\n    _defineProperty(this, \"weekdaysShort\", moment.weekdaysShort());\n\n    _defineProperty(this, \"months\", moment.months());\n\n    _defineProperty(this, \"year\", () => {\n      return this.state.dateContext.format(\"Y\");\n    });\n\n    _defineProperty(this, \"month\", () => {\n      return this.state.dateContext.format(\"MMMM\");\n    });\n\n    _defineProperty(this, \"daysInMonth\", () => {\n      return this.state.dateContext.daysInMonth();\n    });\n\n    _defineProperty(this, \"currentDate\", () => {\n      return this.state.dateContext.get(\"date\");\n    });\n\n    _defineProperty(this, \"currentDay\", () => {\n      return this.state.dateContext.format(\"D\");\n    });\n\n    _defineProperty(this, \"firstDayOfMonth\", () => {\n      let dateContext = this.state.dateContext;\n      let firstDay = moment(dateContext).startOf('month').format('d'); // Day of week 0...1..5...6\n\n      return firstDay;\n    });\n\n    _defineProperty(this, \"setMonth\", month => {\n      let monthNo = this.months.indexOf(month);\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).set(\"month\", monthNo);\n      this.setState({\n        dateContext: dateContext\n      });\n    });\n\n    _defineProperty(this, \"nextMonth\", () => {\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).add(1, \"month\");\n      this.setState({\n        dateContext: dateContext\n      });\n      this.props.onNextMonth && this.props.onNextMonth();\n    });\n\n    _defineProperty(this, \"prevMonth\", () => {\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).subtract(1, \"month\");\n      this.setState({\n        dateContext: dateContext\n      });\n      this.props.onPrevMonth && this.props.onPrevMonth();\n    });\n\n    _defineProperty(this, \"onSelectChange\", (e, data) => {\n      this.setMonth(data);\n      this.props.onMonthChange && this.props.onMonthChange();\n    });\n\n    _defineProperty(this, \"SelectList\", props => {\n      let popup = props.data.map(data => {\n        return /*#__PURE__*/_jsx(\"div\", {\n          children: /*#__PURE__*/_jsx(\"a\", {\n            href: \"#\",\n            onClick: e => {\n              this.onSelectChange(e, data);\n            },\n            children: data\n          })\n        }, data);\n      });\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: \"month-popup\",\n        children: popup\n      });\n    });\n\n    _defineProperty(this, \"onChangeMonth\", (e, month) => {\n      this.setState({\n        showMonthPopup: !this.state.showMonthPopup\n      });\n    });\n\n    _defineProperty(this, \"MonthNav\", () => {\n      return /*#__PURE__*/_jsxs(\"span\", {\n        className: \"label-month\",\n        onClick: e => {\n          this.onChangeMonth(e, this.month());\n        },\n        children: [this.month(), this.state.showMonthPopup && /*#__PURE__*/_jsx(this.SelectList, {\n          data: this.months\n        })]\n      });\n    });\n\n    _defineProperty(this, \"showYearEditor\", () => {\n      this.setState({\n        showYearNav: true\n      });\n    });\n\n    _defineProperty(this, \"setYear\", year => {\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).set(\"year\", year);\n      this.setState({\n        dateContext: dateContext\n      });\n    });\n\n    _defineProperty(this, \"onYearChange\", e => {\n      this.setYear(e.target.value);\n      this.props.onYearChange && this.props.onYearChange(e, e.target.value);\n    });\n\n    _defineProperty(this, \"onKeyUpYear\", e => {\n      if (e.which === 13 || e.which === 27) {\n        this.setYear(e.target.value);\n        this.setState({\n          showYearNav: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"YearNav\", () => {\n      return this.state.showYearNav ? /*#__PURE__*/_jsx(\"input\", {\n        defaultValue: this.year(),\n        className: \"editor-year\",\n        ref: yearInput => {\n          this.yearInput = yearInput;\n        },\n        onKeyUp: e => this.onKeyUpYear(e),\n        onChange: e => this.onYearChange(e),\n        type: \"number\",\n        placeholder: \"year\"\n      }) : /*#__PURE__*/_jsx(\"span\", {\n        className: \"label-year\",\n        onDoubleClick: e => {\n          this.showYearEditor();\n        },\n        children: this.year()\n      });\n    });\n\n    _defineProperty(this, \"onDayClick\", (e, day) => {\n      this.setState({\n        selectedDay: day\n      }, () => {});\n      this.props.onDayClick && this.props.onDayClick(e, day);\n    });\n\n    this.width = _props.width || \"100%\";\n    this.style = _props.style || {};\n    this.style.width = this.width; // add this\n  }\n\n  render() {\n    // Map the weekdays i.e Sun, Mon, Tue etc as <td>\n    let weekdays = this.weekdaysShort.map(day => {\n      return /*#__PURE__*/_jsx(\"td\", {\n        className: \"week-day\",\n        children: day\n      }, day);\n    });\n    let blanks = [];\n\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push( /*#__PURE__*/_jsx(\"td\", {\n        className: \"emptySlot\",\n        children: \"\"\n      }, i * 80));\n    }\n\n    let daysInMonth = [];\n\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let className = d == this.currentDay() ? \"day current-day\" : \"day\";\n      let selectedClass = d == this.state.selectedDay ? \" selected-day \" : \"\";\n      daysInMonth.push( /*#__PURE__*/_jsx(\"td\", {\n        className: className + selectedClass,\n        children: /*#__PURE__*/_jsx(\"span\", {\n          onClick: e => {\n            this.onDayClick(e, d);\n          },\n          children: d\n        })\n      }, d));\n    }\n\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n        cells = [];\n        cells.push(row);\n      }\n\n      if (i === totalSlots.length - 1) {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n      }\n    });\n    let trElems = rows.map((d, i) => {\n      return /*#__PURE__*/_jsx(\"tr\", {\n        children: d\n      }, i * 100);\n    });\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: \"eventinfo\",\n      children: [/*#__PURE__*/_jsx(\"h3\", {\n        children: \"School Calendar \"\n      }), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsx(\"div\", {\n        className: \"calendar-container\",\n        style: this.style,\n        children: /*#__PURE__*/_jsxs(\"table\", {\n          className: \"calendar\",\n          children: [/*#__PURE__*/_jsx(\"thead\", {\n            children: /*#__PURE__*/_jsxs(\"tr\", {\n              className: \"calendar-header\",\n              children: [/*#__PURE__*/_jsxs(\"td\", {\n                colSpan: \"5\",\n                children: [/*#__PURE__*/_jsx(this.MonthNav, {}), \" \", /*#__PURE__*/_jsx(this.YearNav, {})]\n              }), /*#__PURE__*/_jsxs(\"td\", {\n                colSpan: \"2\",\n                className: \"nav-month\",\n                children: [/*#__PURE__*/_jsx(FontAwesomeIcon, {\n                  icon: faArrowLeft,\n                  onClick: e => {\n                    this.prevMonth();\n                  },\n                  className: \"prev\"\n                }), /*#__PURE__*/_jsx(FontAwesomeIcon, {\n                  icon: faArrowRight,\n                  onClick: e => {\n                    this.nextMonth();\n                  },\n                  className: \"prev\"\n                })]\n              })]\n            })\n          }), /*#__PURE__*/_jsxs(\"tbody\", {\n            children: [/*#__PURE__*/_jsx(\"tr\", {\n              children: weekdays\n            }), trElems]\n          })]\n        })\n      })]\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}